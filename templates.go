package main

var Templates = `
{{define "objc/DataObject.h"}}


{{end}}

{{define "objc/DataObject.m"}}


{{end}}

{{define "objc/Interface.h"}}

{{end}}


{{define "objc/Interface.m"}}

{{end}}

{{define "javascript/interfaces"}}// Generated by github.com/sunfmin/goapigen
// DO NOT EDIT

(function(api, $, undefined ) {
	api.rpc = function(methodName, input, callback) {
		var methodUrl = api.baseurl + "/" + methodName + ".json";
		var message = JSON.stringify(input);
		var req = $.ajax({
			type: "POST",
			url: methodUrl,
			contentType:"application/json; charset=utf-8",
			dataType:"json",
			processData: false,
			data: message
		});
		req.done(function(msg) {
			callback(msg, null);
		});
		req.fail(function(jqXHR, textStatus) {
			callback(null, textStatus);
		});
	};
})( window.{{.Name}} = window.{{.Name}} || {}, jQuery);



(function( api, undefined ) {
{{range .Interfaces}}{{ $interfaceName := .Name}}
	api.{{$interfaceName}} = function() {};
{{range .Methods}}{{$method := .}}{{if .ConstructorForInterface}}
	api.{{$interfaceName}}.prototype.{{.Name}} = function({{$method.ParamsForJavascriptFunction}}) {
		var r = new api.{{.ConstructorForInterface.Name}}(){{range .Params}};
		r.{{.Name}} = {{.Name}}{{end}};
		return r;
	}
{{else}}
	api.{{$interfaceName}}.prototype.{{.Name}} = function({{$method.ParamsForJavascriptFunction}}, callback) {
		api.rpc("{{.Name}}", {"this": this, "params": {{$method.ParamsForJson}}}, callback);
		return;
	}
{{end}}{{end}}{{end}}

}( window.{{.Name}} = window.{{.Name}} || {} ));

{{end}}

`
